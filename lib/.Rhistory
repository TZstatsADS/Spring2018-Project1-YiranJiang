data
ggplot(data)+
geom_line(mapping = aes(x = Time, y = That_Month,col = "red"))+
geom_line(mapping = aes(x = Time, y = Later,col="blue"))+
scale_color_discrete(name = "Propotions", labels = c("Later", "That Month"))+
labs(title = "Plot of two proportions", x= "Time", y = "Propotion")
prop_peer_pressure(37,5)
prop_peer_pressure(102,14)
nodes
nodes
contact37 <- which(network[,37] == 1 & nodes$adoption_date <= 5)
length(contact37)
3/doc.contacts[37]
whetherm2 <- nodes$adoption_date <= 2
whetherm2 <- which(whetherm2)
length(whetherm2)
whetherm14 <- nodes$adoption_date > 14
whetherm14 <- which(whetherm14)
length(whetherm14)
t <- data.frame(seq(1,17,by=1))
data <- data.frame(apply(t,1,function11))
t <- seq(1,17)
data <- rbind(data,t)
data
adopters <- function(month,not.yet = FALSE){
if (not.yet == FALSE){
return(which(nodes$adoption_date == month))
}else{
return(which(nodes$adoption_date > month | nodes$adoption_date == Inf))
}
}
adopters(2)
adopters(month = 14, not.yet = TRUE)
length(adopters(month = 14, not.yet = TRUE))
function11(1)
function11 <- function(month){
t = month
this.vec1 = data.frame(adopters(month))
this.vec2 = data.frame(adopters(month,not.yet = TRUE))
proportion1 <- apply(this.vec1,1,prop_peer_pressure,month=t)
proportion2 <- apply(this.vec2,1,prop_peer_pressure,month=t)
return(c(mean(proportion1),mean(proportion2)))
}
function11(1)
t <- data.frame(seq(1,17,by=1))
data <- data.frame(apply(t,1,function11))
t <- seq(1,17)
data <- rbind(data,t)
data
rownames(data) <- c("That_Month","Later","Time")
colnames(data) <- seq(1,17)
data <- t(data)
data <- data.frame(data)
data
ggplot(data)+
geom_line(mapping = aes(x = Time, y = That_Month,col = "red"))+
geom_line(mapping = aes(x = Time, y = Later,col="blue"))+
scale_color_discrete(name = "Propotions", labels = c("Later", "That Month"))+
labs(title = "Plot of two proportions", x= "Time", y = "Propotion")
function11 <- function(month){
t = month
this.vec1 = data.frame(adopters(t))
this.vec2 = data.frame(adopters(t,not.yet = TRUE))
proportion1 <- apply(this.vec1,1,prop_peer_pressure,month=t)
proportion2 <- apply(this.vec2,1,prop_peer_pressure,month=t)
return(c(mean(proportion1),mean(proportion2,na.rm =TRUE)))
}
function11(1)
t <- data.frame(seq(1,17,by=1))
data <- data.frame(apply(t,1,function11))
t <- seq(1,17)
data <- rbind(data,t)
data
rownames(data) <- c("That_Month","Later","Time")
colnames(data) <- seq(1,17)
data <- t(data)
data <- data.frame(data)
data
ggplot(data)+
geom_line(mapping = aes(x = Time, y = That_Month,col = "red"))+
geom_line(mapping = aes(x = Time, y = Later,col="blue"))+
scale_color_discrete(name = "Propotions", labels = c("Later", "That Month"))+
labs(title = "Plot of two proportions", x= "Time", y = "Propotion")
function11 <- function(month){
t = month
this.vec1 = as.data.frame(adopters(t))
this.vec2 = as.data.frame(adopters(t,not.yet = TRUE))
proportion1 <- apply(this.vec1,1,prop_peer_pressure,month=t)
proportion2 <- apply(this.vec2,1,prop_peer_pressure,month=t)
return(c(mean(proportion1,na.rm =TRUE),mean(proportion2,na.rm =TRUE)))
}
function11(1)
t <- data.frame(seq(1,17,by=1))
data <- data.frame(apply(t,1,function11))
t <- seq(1,17)
data <- rbind(data,t)
data
rownames(data) <- c("That_Month","Later","Time")
colnames(data) <- seq(1,17)
data <- t(data)
data <- data.frame(data)
data
ggplot(data)+
geom_line(mapping = aes(x = Time, y = That_Month,col = "red"))+
geom_line(mapping = aes(x = Time, y = Later,col="blue"))+
scale_color_discrete(name = "Propotions", labels = c("Later", "That Month"))+
labs(title = "Plot of two proportions", x= "Time", y = "Propotion")
function11 <- function(month){
t = month
this.vec1 = as.data.frame(adopters(t))
this.vec2 = as.data.frame(adopters(t,not.yet = TRUE))
proportion1 <- apply(this.vec1,1,prop_peer_pressure,month=t)
proportion2 <- apply(this.vec2,1,prop_peer_pressure,month=t)
return(c(mean(proportion1,na.rm =TRUE),mean(proportion2,na.rm =TRUE)))
}
t <- data.frame(seq(1,17,by=1))
data <- data.frame(apply(t,1,function11))
t <- seq(1,17)
data <- rbind(data,t)
data
count_peer_pressure <- function(i,month){
return(length(which(network[,i] == 1 & nodes$adoption_date < month)))
}
count_peer_pressure(37,5)
prop_peer_pressure <- function(i,month){
if (doc.contacts[i] > 0){
return(count_peer_pressure(i,month)/doc.contacts[i])
}else{
return(NaN)
}
}
prop_peer_pressure(37,5)
prop_peer_pressure(102,14)
function11 <- function(month){
t = month
this.vec1 = as.data.frame(adopters(t))
this.vec2 = as.data.frame(adopters(t,not.yet = TRUE))
proportion1 <- apply(this.vec1,1,prop_peer_pressure,month=t)
proportion2 <- apply(this.vec2,1,prop_peer_pressure,month=t)
return(c(mean(proportion1,na.rm =TRUE),mean(proportion2,na.rm =TRUE)))
}
function11(1)
t <- data.frame(seq(1,17,by=1))
data <- data.frame(apply(t,1,function11))
t <- seq(1,17)
data <- rbind(data,t)
data
rownames(data) <- c("That_Month","Later","Time")
colnames(data) <- seq(1,17)
data <- t(data)
data <- data.frame(data)
data
ggplot(data)+
geom_line(mapping = aes(x = Time, y = That_Month,col = "red"))+
geom_line(mapping = aes(x = Time, y = Later,col="blue"))+
scale_color_discrete(name = "Propotions", labels = c("Later", "That Month"))+
labs(title = "Plot of two proportions", x= "Time", y = "Propotion")
count_peer_pressure <- function(i,month){
return(length(which(network[,i] == 1 & nodes$adoption_date <= month)))
}
count_peer_pressure(37,5)
prop_peer_pressure <- function(i,month){
if (doc.contacts[i] > 0){
return(count_peer_pressure(i,month)/doc.contacts[i])
}else{
return(NaN)
}
}
prop_peer_pressure(37,5)
prop_peer_pressure(102,14)
function11 <- function(month){
t = month
this.vec = data.frame(seq(1,125))
propotion <- apply(this.vec,1,prop_peer_pressure,month=t)
if (month > 1){
propotion_1 <- apply(this.vec,1,prop_peer_pressure,month=t-1)
}else{propotion_1 = rep(0,125)}
propotion_more <- 1-propotion
propotion_less <- propotion- propotion_1
return(c(mean(propotion_less,na.rm =TRUE ),mean(propotion_more,na.rm =TRUE)))
}
function11 <- function(month){
t = month
this.vec1 = as.data.frame(adopters(t))
this.vec2 = as.data.frame(adopters(t,not.yet = TRUE))
proportion1 <- apply(this.vec1,1,prop_peer_pressure,month=t)
proportion2 <- apply(this.vec2,1,prop_peer_pressure,month=t)
return(c(mean(proportion1,na.rm =TRUE),mean(proportion2,na.rm =TRUE)))
}
function11(1)
t <- data.frame(seq(1,17,by=1))
data <- data.frame(apply(t,1,function11))
t <- seq(1,17)
data <- rbind(data,t)
data
rownames(data) <- c("That_Month","Later","Time")
function11 <- function(month){
t = month
this.vec1 = as.data.frame(adopters(t))
this.vec2 = as.data.frame(adopters(t,not.yet = TRUE))
proportion1 <- apply(this.vec1,1,prop_peer_pressure,month=t)
proportion2 <- apply(this.vec2,1,prop_peer_pressure,month=t)
return(c(mean(proportion1),mean(proportion2,na.rm =TRUE)))
}
function11(1)
t <- data.frame(seq(1,17,by=1))
function11 <- function(month){
t = month
this.vec1 = as.data.frame(adopters(t))
this.vec2 = as.data.frame(adopters(t,not.yet = TRUE))
proportion1 <- apply(this.vec1,1,prop_peer_pressure,month=t)
proportion2 <- apply(this.vec2,1,prop_peer_pressure,month=t)
return(c(mean(proportion1),mean(proportion2)))
}
function11(1)
t <- data.frame(seq(1,17,by=1))
prop_peer_pressure <- function(i,month){
return(count_peer_pressure(i,month)/doc.contacts[i])
}
prop_peer_pressure(37,5)
prop_peer_pressure(102,14)
function11 <- function(month){
t = month
this.vec = data.frame(seq(1,125))
propotion <- apply(this.vec,1,prop_peer_pressure,month=t)
if (month > 1){
propotion_1 <- apply(this.vec,1,prop_peer_pressure,month=t-1)
}else{propotion_1 = rep(0,125)}
propotion_more <- 1-propotion
propotion_less <- propotion- propotion_1
return(c(mean(propotion_less,na.rm =TRUE ),mean(propotion_more,na.rm =TRUE)))
}
function11 <- function(month){
t = month
this.vec1 = as.data.frame(adopters(t))
this.vec2 = as.data.frame(adopters(t,not.yet = TRUE))
proportion1 <- apply(this.vec1,1,prop_peer_pressure,month=t)
proportion2 <- apply(this.vec2,1,prop_peer_pressure,month=t)
return(c(mean(proportion1),mean(proportion2)))
}
function11(1)
t <- data.frame(seq(1,17,by=1))
data <- data.frame(apply(t,1,function11))
t <- seq(1,17)
data <- rbind(data,t)
data
rownames(data) <- c("That_Month","Later","Time")
colnames(data) <- seq(1,17)
function11 <- function(month){
t = month
this.vec1 = as.data.frame(adopters(t))
this.vec2 = as.data.frame(adopters(t,not.yet = TRUE))
proportion1 <- apply(this.vec1,1,prop_peer_pressure,month=t)
proportion2 <- apply(this.vec2,1,prop_peer_pressure,month=t)
return(c(mean(proportion1,na.rm =TRUE),mean(proportion2,na.rm =TRUE)))
}
function11(1)
t <- data.frame(seq(1,17,by=1))
data <- data.frame(apply(t,1,function11))
t <- seq(1,17)
data <- rbind(data,t)
data
results <- sapply(1:17,function11)
results
function11 <- function(t){
this.vec1 = as.data.frame(adopters(t))
this.vec2 = as.data.frame(adopters(t,not.yet = TRUE))
proportion1 <- apply(this.vec1,1,prop_peer_pressure,month=t)
proportion2 <- apply(this.vec2,1,prop_peer_pressure,month=t)
return(c(mean(proportion1,na.rm =TRUE),mean(proportion2,na.rm =TRUE)))
}
function11(1)
function11 <- function(t){
this.vec1 = as.data.frame(adopters(t))
print(this.vec1)
this.vec2 = as.data.frame(adopters(t,not.yet = TRUE))
proportion1 <- apply(this.vec1,1,prop_peer_pressure,month=t)
proportion2 <- apply(this.vec2,1,prop_peer_pressure,month=t)
return(c(mean(proportion1,na.rm =TRUE),mean(proportion2,na.rm =TRUE)))
}
function11(1)
adopters(1)
apply(this.vec1,1,prop_peer_pressure,month=t)
adopters(1)
test <- adopters(1)
apply(test,1,prop_peer_pressure,month=t)
test <- adopters(1)
test <- as.data.frame(adopters(1))
apply(test,1,prop_peer_pressure,month=t)
function11(1)
test <- as.data.frame(adopters(1))
apply(test,1,prop_peer_pressure,month=1)
test[1]
function11(1)
test <- as.data.frame(adopters(1))
apply(test,1,prop_peer_pressure,month=1)
test[1]
test[,1]
test[1,1]
test[1,2]
test[2,1]
for (i in 1:11){
print(prop_peer_pressure(test[i,1],month=1))
}
apply(test,1,prop_peer_pressure,month=1)
functiontest <- function(amonth){
a<-apply(as.data.frame(adopters(amonth),ncol=1),1,prop_peer_pressure,month=amonth)
b<-apply(as.data.frame(adopters(amonth,not.yet = TRUE),ncol=1),1,prop_peer_pressure,month=amonth)
return(c(mean(a),mean(b)))
}
results <- sapply(1:17,functiontest)
results
install.packages('DT')
library(dplyr)
library(dplyr)
library(readr)
library(DT)
BaseballSalary=read_csv(file="data/BaseballSalary.csv")
BaseballSalary=read_csv(file="/Users/jiangyiran/Downloads/BaseballSalary.csv")
datatable(head(BaseballSalary,50), options = list(scrollX=T, pageLength = 8))
col.use=brewer.pal(10, "RdYlBu")
hist.1985=hist(filter(BaseballSalary, year==1985)$salary,
main="salaries in 1985",
xlab="annual salary",
col=col.use,
nclass = 50)
library(RColorBrewer)
col.use=brewer.pal(10, "RdYlBu")
hist.1985=hist(filter(BaseballSalary, year==1985)$salary,
main="salaries in 1985",
xlab="annual salary",
col=col.use,
nclass = 50)
hist(filter(BaseballSalary, year==2004)$salary,
main="salaries in 2004",
xlab="annual salary",
col=col.use,
nclass = 50)
par(mfrow=c(2,1))
hist.1985=hist(filter(BaseballSalary, year==1985)$salary,
main="salaries in 1985",
xlab="annual salary",
col=col.use,
nclass = 50,
ylim=c(0, 250))
print ("Hello World")
setwd('/Users/jiangyiran/Documents/GitHub/Spring2018-Project1-YiranJiang/lib')
knitr::opts_chunk$set(echo = TRUE)
corr([1,2],[1,2])
a <- c(1,2)
a <- c(1,2)
b <- c(10,100)
corr(a,b)
rcorr(a,b)
rcor(a,b)
cor(a,b)
cor(a,b)
cov(a,b)
packages.used=c("rvest", "tibble", "qdap",
"sentimentr", "gplots", "dplyr",
"tm", "syuzhet", "factoextra",
"beeswarm", "scales", "RColorBrewer",
"RANN", "tm", "topicmodels")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE)
}
library("rvest")
library("tibble")
library("qdap")
library("syuzhet")
library("factoextra")
library("qdap")
library("sentimentr")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("beeswarm")
library("scales")
library("RColorBrewer")
library("RANN")
library("tm")
library("topicmodels")
source("../lib/plotstacked.R")
source("../lib/speechFuncs.R")
print(R.version)
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
inaug=f.speechlinks(main.page)
as.Date(inaug[,1], format="%B %e, %Y")
inaug=inaug[-nrow(inaug),] # remove the last line, irrelevant due to error.
main.page=read_html("http://www.presidency.ucsb.edu/nomination.php")
nomin <- f.speechlinks(main.page)
main.page=read_html("http://www.presidency.ucsb.edu/farewell_addresses.php")
nomin <- f.speechlinks(main.page)
main.page=read_html("http://www.presidency.ucsb.edu/farewell_addresses.php")
farewell <- f.speechlinks(main.page)
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
inaug=f.speechlinks(main.page)
as.Date(inaug[,1], format="%B %e, %Y")
inaug=inaug[-nrow(inaug),] # remove the last line, irrelevant due to error.
main.page=read_html("http://www.presidency.ucsb.edu/nomination.php")
nomin <- f.speechlinks(main.page)
main.page=read_html("http://www.presidency.ucsb.edu/farewell_addresses.php")
farewell <- f.speechlinks(main.page)
#head(farewell)
head(farewell)
as.Date(inaug[,1], format="%B %e, %Y")
main.page <- read_html(x = "http://www.presidency.ucsb.edu/inaugurals.php")
# Get link URLs
# f.speechlinks is a function for extracting links from the list of speeches.
inaug=f.speechlinks(main.page)
#head(inaug)
as.Date(inaug[,1], format="%B %e, %Y")
inaug=inaug[-nrow(inaug),] # remove the last line, irrelevant due to error.
#### Nomination speeches
main.page=read_html("http://www.presidency.ucsb.edu/nomination.php")
# Get link URLs
nomin <- f.speechlinks(main.page)
#head(nomin)
#
#### Farewell speeches
main.page=read_html("http://www.presidency.ucsb.edu/farewell_addresses.php")
# Get link URLs
farewell <- f.speechlinks(main.page)
inaug.list=read.csv("../data/inauglist.csv", stringsAsFactors = FALSE)
nomin.list=read.csv("../data/nominlist.csv", stringsAsFactors = FALSE)
farewell.list=read.csv("../data/farewelllist.csv", stringsAsFactors = FALSE)
speech.list=rbind(inaug.list, nomin.list, farewell.list)
speech.list$type=c(rep("inaug", nrow(inaug.list)),
rep("nomin", nrow(nomin.list)),
rep("farewell", nrow(farewell.list)))
speech.url=rbind(inaug, nomin, farewell)
speech.list=cbind(speech.list, speech.url)
speech.list=rbind(inaug.list, nomin.list, farewell.list)
speech.list$type=c(rep("inaug", nrow(inaug.list)),
rep("nomin", nrow(nomin.list)),
rep("farewell", nrow(farewell.list)))
speech.url=rbind(inaug, nomin, farewell)
speech.list=cbind(speech.list, speech.url)
speech.list$fulltext=NA
for(i in seq(nrow(speech.list))) {
text <- read_html(speech.list$urls[i]) %>% # load the page
html_nodes(".displaytext") %>% # isloate the text
html_text() # get the text
speech.list$fulltext[i]=text
# Create the file name
filename <- paste0("../data/fulltext/",
speech.list$type[i],
speech.list$File[i], "-",
speech.list$Term[i], ".txt")
sink(file = filename) %>% # open file to write
cat(text)  # write the file
sink() # close the file
}
speech1=paste(readLines("../data/fulltext/SpeechDonaldTrump-NA.txt",
n=-1, skipNul=TRUE),
collapse=" ")
speech2=paste(readLines("../data/fulltext/SpeechDonaldTrump-NA2.txt",
n=-1, skipNul=TRUE),
collapse=" ")
speech3=paste(readLines("../data/fulltext/PressDonaldTrump-NA.txt",
n=-1, skipNul=TRUE),
collapse=" ")
Trump.speeches=data.frame(
President=rep("Donald J. Trump", 3),
File=rep("DonaldJTrump", 3),
Term=rep(0, 3),
Party=rep("Republican", 3),
Date=c("August 31, 2016", "September 7, 2016", "January 11, 2017"),
Words=c(word_count(speech1), word_count(speech2), word_count(speech3)),
Win=rep("yes", 3),
type=rep("speeches", 3),
links=rep(NA, 3),
urls=rep(NA, 3),
fulltext=c(speech1, speech2, speech3)
)
speech.list=rbind(speech.list, Trump.speeches)
```{r, message=FALSE, warning=FALSE}
packages.used=c("rvest", "tibble", "qdap",
"sentimentr", "gplots", "dplyr",
"tm", "syuzhet", "factoextra",
"beeswarm", "scales", "RColorBrewer",
"RANN", "tm", "topicmodels")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
library("rvest")
library("tibble")
library("qdap")
library("qdap")
detach("package:qdapRegex", unload=TRUE)
library("qdapRegex", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
detach("package:qdapDictionaries", unload=TRUE)
library("qdapDictionaries", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("qdap")
detach("package:qdapDictionaries", unload=TRUE)
detach("package:qdapRegex", unload=TRUE)
detach("package:qdapTools", unload=TRUE)
library("qdap")
remove.packages('qdap')
detach("package:qdapRegex", unload=TRUE)
detach("package:qdapDictionaries", unload=TRUE)
detach("package:qdapTools", unload=TRUE)
remove.packages('qdap')
install.packages('qdap')
library("qdap")
library("qdap", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
